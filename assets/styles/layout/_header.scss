/*----------------------------------*\
    Header
\*----------------------------------*/
$icon-size: 32px;

.header {
    height: 100vh;
    width: 180px;
    position: fixed;
    flex-flow: column;
    z-index: 0;
    top: 0;
    background-color: lighten($color-blue, 30);

    .links a {
        display: flex;
        align-items: center;
        cursor: pointer;
        // minimal margin
        margin-bottom: 2px;
        padding: 12px 0 10px 10px;
        
        font-size: 1.25em;
        color: darken($color-blue, 20);
        @include transition();
        
        span {
            font-family: $font-secondary, $font-tertiary;
            padding-left: 18px;
            @include transition();
            @include transition(.05s);
        }
        
        svg {
            height: $icon-size;
            @include transition();

            path {
                fill: darken($color-blue, 20);
            }
        }
    
        &:hover {
            background-color: darken($color-blue, 20);
        
            span {
                color: $color-white;
            }
            svg {
                path {
                    fill: $color-white;
                    @include transition(.1s);
                }
            }
        }
        
    }
}

.burger {
    // 36px, 4px wider than other svgs
    // this is why we move this 2px left to be centered
    $burger-width: $icon-size*1.2;
    $burger-height: $icon-size;
    
    $burger-line-h: 5px;
    $burger-line-spacing: 7.5px;
    
    width: $burger-width;
    height: $burger-height;
    
    // see above
    margin: 20px (10px - 2px);
    position: relative;
    cursor: pointer;
    
    ///////////////
    // ANIMATIONS
    ///////////////
    
    // width when lines are "collapsed" to the left
    $line-closed-w: 2px;
    
    // this mixin generates an open animation
    @mixin open-anim($name, $translateY, $rotate) {
        @keyframes #{$name} {
            0% {
                transform: translateY(0) rotate(0deg);
            }
            50% {
                transform: translateY($translateY);
            }
            100% {
                transform: translateY($translateY) rotate($rotate);
            }
        }
    }
    // generates animations for top and bottom line
    @include open-anim("open-anim-top", $burger-line-h+$burger-line-spacing, 45deg);
    @include open-anim("open-anim-bottom", -($burger-line-h+$burger-line-spacing), -45deg);
    // open animation for middle line
    @keyframes open-anim-middle {
        0% {
            transform: scaleX(1);
        }
        100% {
            transform: scaleX(0);
        }
    }
    
    
    // this mixin generates a close animation
    @mixin close-anim($name, $translateY, $rotate, $delay: 75%) {
        // TODO
        @keyframes #{$name} {
            0% {
                transform: translateY($translateY) rotate($rotate);
            }
            25% {
                transform: translateY($translateY) rotate(0deg);
                width: $burger-width;
            }
            50% {
                transform: translateY($translateY) rotate(0deg);
            }
            51% {
                transform: translateY($translateY) rotate(0deg);
                width: $line-closed-w;
            }
            #{$delay} {
                transform: translateY(0) rotate(0deg) translateX(0);
                width: $line-closed-w;
            }
            100% {
                transform: translateY(0) rotate(0deg) translateX(0);
                width: $burger-width;
            }
        }
    }
    // generates close animations for top and bottom line
    @include close-anim("close-anim-top", $burger-line-h+$burger-line-spacing, 45deg, 60%);
    @include close-anim("close-anim-bottom", -($burger-line-h+$burger-line-spacing), -45deg, 80%);
    // close animations for middle line
    @keyframes close-anim-middle {
        0%, 30% {
            width: $burger-width;
        }
        45% {
            width: $line-closed-w;
        }
        70% {
            transform: translateY(0) rotate(0deg) translateX(0);
            width: $line-closed-w;
        }
        100% {
            transform: translateY(0) rotate(0deg) translateX(0);
            width: $burger-width;
        }
    }
    
    $custom-anim-curve: cubic-bezier(.16,.84,.43,.94);
    
    @mixin fix-animation() {
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
        animation-direction: normal;
    }

    
    /////////////////
    // BURGER LINES
    /////////////////
    
    span {
        position: absolute;
        height: $burger-line-h;
        width: $burger-width;
        border-radius: 1px;
        background-color: darken($color-blue, 20);
        @include transition();
        
        &:nth-child(2) {
            top: $burger-line-h + $burger-line-spacing;
            @include transition(none);
        }
        &:nth-child(3) {
            top: $burger-line-h*2 + $burger-line-spacing*2;
        }
    }
    
    &.closed span {
        &:nth-child(1) {
            animation: close-anim-top .6s $custom-anim-curve;
            @include fix-animation();
        }
        
        &:nth-child(2) {
            top: $burger-line-h + $burger-line-spacing;
            animation: close-anim-middle .6s $custom-anim-curve;
            transform-origin: center;
            @include fix-animation();
        }
        &:nth-child(3) {
            top: $burger-line-h*2 + $burger-line-spacing*2;
            animation: close-anim-bottom .6s $custom-anim-curve;
            @include fix-animation();
        }
    }
    
    &.opened span {
        &:nth-child(1) {
            animation: open-anim-top .4s $custom-anim-curve;
            @include fix-animation();
        }
        
        &:nth-child(2) {
            @include transition(.7s);
            animation: open-anim-middle .4s $custom-anim-curve;
            @include fix-animation();
        }
        
        &:nth-child(3) {
            animation: open-anim-bottom .4s $custom-anim-curve;
            @include fix-animation();
        }
    }
}